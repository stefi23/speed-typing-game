{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","text","setText","timeRemaining","setTimeRemaining","startGame","setStartGame","wordCount","setWordCount","textareaRef","useRef","useEffect","setTimeout","calculateWordCount","prevTime","endGame","console","log","filteredWords","trim","split","filter","word","length","ref","disabled","onChange","e","value","target","onClick","current","focus","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAuEeA,MApEf,WAEE,IAFa,EAIWC,mBAAS,IAJpB,mBAINC,EAJM,KAIAC,EAJA,OAK6BF,mBAHpB,IAFT,mBAKNG,EALM,KAKSC,EALT,OAMqBJ,oBAAS,GAN9B,mBAMNK,EANM,KAMKC,EANL,OAOqBN,mBAAS,GAP9B,mBAONO,EAPM,KAOKC,EAPL,KASPC,EAAcC,iBAAO,MAI3BC,qBAAU,WAEJR,EAAgB,GAAKE,EACvBO,YAAW,WACTC,EAAmBZ,GACnBG,GAAiB,SAAAU,GAAQ,OAAIA,EAAW,OACvC,KACwB,IAAlBX,GACTY,MAED,CAACZ,EAAeE,IAGnB,IAcMU,EAAU,WACdT,GAAa,GACbO,EAAmBZ,IAGfY,EAAqB,SAACZ,GAC1Be,QAAQC,IAAIhB,GACZ,IACMiB,EADWjB,EAAKkB,OAAOC,MAAM,KACJC,QAAO,SAAAC,GAAI,MAAa,KAATA,KAC9C,OAAOd,EAAaU,EAAcK,SAGpC,OACE,gCACE,uCACA,0BACEC,IAAKf,EACLgB,UAAWpB,EACXqB,SAhCe,SAACC,GAAO,IACnBC,EAAUD,EAAEE,OAAZD,MACR1B,EAAQ0B,IA+BJA,MAAO3B,IACT,kDAAqBE,EAArB,OACA,wBAAQsB,SAAUpB,EAAWyB,QA9BhB,WAAO,IAAD,EACrBxB,GAAa,GACbE,EAAa,GACbJ,EAhCoB,IAiCpBF,EAAQ,IACRO,EAAYsB,QAAQN,UAAW,EAC/B,UAAAhB,EAAYsB,eAAZ,SAAqBC,SAwBnB,mBACA,6CAAgBzB,SCrDP0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ab3edab6.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect, useRef } from \"react\"\n\nfunction App() {\n\n  const STARTING_TIME = 60\n\n  const [text, setText] = useState(\"\")\n  const [timeRemaining, setTimeRemaining] = useState(STARTING_TIME)\n  const [startGame, setStartGame] = useState(false)\n  const [wordCount, setWordCount] = useState(0)\n\n  const textareaRef = useRef(null)\n\n\n\n  useEffect(() => {\n\n    if (timeRemaining > 0 && startGame) {\n      setTimeout(() => {\n        calculateWordCount(text)\n        setTimeRemaining(prevTime => prevTime - 1)\n      }, 1000)\n    } else if (timeRemaining === 0) {\n      endGame()\n    }\n  }, [timeRemaining, startGame])\n\n\n  const handleChange = (e) => {\n    const { value } = e.target\n    setText(value)\n  }\n\n  const playGame = () => {\n    setStartGame(true)\n    setWordCount(0)\n    setTimeRemaining(STARTING_TIME)\n    setText(\"\")\n    textareaRef.current.disabled = false\n    textareaRef.current?.focus()\n  }\n\n  const endGame = () => {\n    setStartGame(false)\n    calculateWordCount(text)\n  }\n\n  const calculateWordCount = (text) => {\n    console.log(text)\n    const wordsArr = text.trim().split(\" \")\n    const filteredWords = wordsArr.filter(word => word !== \"\")\n    return setWordCount(filteredWords.length)\n  }\n\n  return (\n    <div>\n      <h1>Title</h1>\n      <textarea\n        ref={textareaRef}\n        disabled={!startGame}\n        onChange={handleChange}\n        value={text} />\n      <h4>Time remaining: {timeRemaining} </h4>\n      <button disabled={startGame} onClick={playGame}>Start</button>\n      <h1>Word count:{wordCount}</h1>\n    </div>\n\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}